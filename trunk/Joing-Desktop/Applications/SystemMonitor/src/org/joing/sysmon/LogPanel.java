/*
 * LogPanel.java
 *
 * Created on 24 de junio de 2007, 17:16
 */

package org.joing.sysmon;

import java.awt.event.ActionEvent;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.AbstractAction;
import javax.swing.JPopupMenu;

/**
 * 
 * Note: This class has package scope, therefore it can be instantiated only by
 * SystemMonitor.
 *
 * @author  fmorero
 */
class LogPanel extends javax.swing.JPanel
{
    private AbstractAction actClear;
    private AbstractAction actToFile;
    
    private long nStartTime;
    
    //------------------------------------------------------------------------//
    
    /** Creates new form LogPanel */
    LogPanel()
    {
        nStartTime = -1;
        actClear   = new ClearAction();
        actToFile  = new ToFileAction();
        
        initComponents();
        
        btnClear.setAction( actClear );
        btnToFile.setAction( actToFile );
        
        JPopupMenu popup = new JPopupMenu();
                   popup.add( actClear );
                   popup.add( actToFile );
        
        txtLog.setComponentPopupMenu( popup );
        
//        for( int n = 0; n < 78; n++ )
//            addLine( "esta es la linea nÂº "+ n );
    }
   
    public void addLine( String sLine )
    {
        if( sLine != null && sLine.length() > 0 )
        {
            StringBuffer sb = new StringBuffer();
            
            if( nStartTime == -1 )   // 1st time to print
            {
                SimpleDateFormat sdf = new SimpleDateFormat( "yyyy-MM-dd 'at' HH:mm:ss" );
                
                sb.append( "Log started on " ).append( sdf.format( new Date() ) ).append( '\n' );
                nStartTime = System.currentTimeMillis();
                
                actClear.setEnabled( true );
                actToFile.setEnabled( true );
            }
            
//            double nElapsed = (System.currentTimeMillis() - nStartTime) / 10;
//            String sElapsed = NumberFormat.getNumberInstance().format( nElapsed );

//            sb.append( "[+" ).append( sElapsed ).append( "] ");            
//            sb.append( ' ' ).append( sLine ).append( "\n" );
            sb.append(sLine).append("\n");
            txtLog.append( sb.toString() );
        }
    }
    
    public void clear()
    {
        txtLog.setText( "" );
        actClear.setEnabled( false );
        actToFile.setEnabled( false );
    }
    
    public void toFile()
    {
        // TODO: hacerlo (invocar JFileChooser)
        
        // Internally TextArea stores CR/LF as "\n"
        // and has to be changed by platform specific
        String sLog = txtLog.getText().replace( "\n", System.getProperty( "line.separator" ) );
               
        clear();
    }
     
    //------------------------------------------------------------------------//
    // INNER CLASSES
    //------------------------------------------------------------------------//
    
    private class ClearAction extends AbstractAction
    {
        private ClearAction()
        {
            super( "Clear" );
            putValue( AbstractAction.SHORT_DESCRIPTION, "Clears text-area" );
        }
        
        @Override
        public boolean isEnabled()
        {
            return LogPanel.this.txtLog.getDocument().getLength() > 0;
        }
        
        public void actionPerformed( ActionEvent ae )
        {
            LogPanel.this.clear();
        }
    }
    
    private class ToFileAction extends AbstractAction
    {
        private ToFileAction()
        {
            super( "To file..." );
            putValue( AbstractAction.SHORT_DESCRIPTION, "Saves text-area contents to a file" );
        }
        
        @Override
        public boolean isEnabled()
        {
            return LogPanel.this.txtLog.getDocument().getLength() > 0;
        }
        
        public void actionPerformed( ActionEvent ae )
        {
            LogPanel.this.toFile();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        spTextLog = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        btnToFile = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        txtLog.setEditable(false);
        spTextLog.setViewportView(txtLog);

        btnToFile.setMnemonic('f');

        btnClear.setMnemonic('C');

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spTextLog, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnToFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spTextLog, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnToFile))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnToFile;
    private javax.swing.JScrollPane spTextLog;
    private javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables
    
}